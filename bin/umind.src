「unidecode.src」を　コンパイル。

コンパイル元ファイルは　ファイル。
コンパイル先ファイルは　ファイル。

エラー処理とは
	エラー？　ならば　
		エラー文字列を　一行表示し、
		コンパイル元ファイルを　クローズし、
		コンパイル先ファイルを　クローズし、
		重大エラーにし、
	つぎに。

※※※※※※※※※※※※※※※※※※※※※※※※※※※※※※※
※ＵＴＦ８で書かれたソースコードをコンパイルし、　　　　　　 ※
※ファイル名先頭に「s」を付けたファイルを生成します。　　　　※
※使用方法　　　　　　　　　　　　　　　　　　　　　　　　　　　 ※
※umind <utf8_file>										   ※
※※※※※※※※※※※※※※※※※※※※※※※※※※※※※※※

メインとは
	コンパイル先ファイル名は　文字列実体　長さ　１００桁
	行は　文字列

	Unicodeデコードテーブルを読み出しし、　偽？　ならば
		重大エラーにする
    つぎに
	起動引数個数が　ゼロ？　ならば
		「起動引数無し」を　一行表示し
	さもなければ
		コンパイル先ファイル名に　「s」を　入れ、
		カレントディレクトリと　起動引数（１個目）で　絶対パスと相対パスをマージし
		コンパイル元ファイルを　オープンし、エラー処理し、
		コンパイル先ファイル名に　起動引数（１個目）を　追加し、
		コンパイル先ファイル名で　コンパイル先ファイルを　新規オープンし、　エラー処理し、
		ここから
			コンパイル元ファイルから　一行読み出し　行に　入れ
			データ終り？　ならば
				打ち切り
			つぎに
			行を　ＵＴＦ８→ＳＪＩＳ変換して
			コンパイル先ファイルに　一行書き込み、エラー処理し、
		繰り返し	
		コンパイル元ファイルを　クローズし、
		コンパイル先ファイルを　クローズし、
		「mind 」と　コンパイル先ファイル名を　合成し、「 file」も　合成し、プログラム実行して 
	つぎに。